

"C++

"" clang-complete
NeoBundleLazy  'https://github.com/Rip-Rip/clang_complete', {
      \ "autoload": {
      \   "filetypes": "cpp",
      \ }}

let g:clang_periodic_quickfix = 1
let g:clang_complete_copen = 1
let g:clang_use_library = 1

" These operations are needed when you update LLVM
" Please make a symbolic link like for debian
"   ln -s /usr/lib/llvm-3.5/lib $HOME/local/llvm/lib
"   ln -s /usr/include/c++/4.8/ $HOME/local/llvm/include1
"   ln -s /usr/include/x86_64-linux-gnu/c++/4.8/ $HOME/local/llvm/include2
" For basils
"   ln -s /share/usr-x86_64/lib/ $HOME/local/llvm/lib
"   ln -s /share/usr-x86_64/include/c++/4.9.1 $HOME/local/llvm/include1
"   ln -s /share/usr-x86_64/include/c++/4.9.1/x86_64-unknown-linux-gnu/ $HOME/local/llvm/include2
let g:clang_library_path = $HOME . '/local/llvm/lib/'
let g:clang_user_options = "-std=c++11 -stdlib=libc++ -I" . $HOME . "/local/llvm/include1 -I" . $HOME . "/local/llvm/include2"

autocmd FileType cpp setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab


" save the file like ~/.clang-format
"   BasedOnStyle: LLVM
function! s:clang_format()
  let now_line = line(".")
  exec ":%! clang-format"
  exec ":" . now_line
endfunction

if executable('clang-format')
  augroup cpp_clang_format
    autocmd!
    autocmd BufWrite,FileWritePre,FileAppendPre *.[ch]pp call s:clang_format()
    autocmd BufWrite,FileWritePre,FileAppendPre *.cc call s:clang_format()
    autocmd BufWrite,FileWritePre,FileAppendPre *.h call s:clang_format()
  augroup END
endif

