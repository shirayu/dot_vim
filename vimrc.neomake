
call dein#add('neomake/neomake')

let g:neomake_open_list = 2

autocmd myvimrc BufWritePost * Neomake

let g:neomake_cpp_enabled_makers = ['clang']
let g:neomake_go_enabled_makers = ['go', 'govet', 'golint']

autocmd myvimrc FileType tex call ExecCheck('lacheck')
let g:neomake_tex_enabled_makers = ['lacheck']

autocmd myvimrc FileType vim call ExecCheck('vint')

autocmd myvimrc FileType python call ExecCheck('flake8')
autocmd myvimrc FileType python call ExecCheck('mypy')
let g:neomake_python_enabled_makers = ['flake8', 'mypy']
let g:neomake_python_mypy_args = neomake#makers#ft#python#mypy().args + ['--python-version', '3.7', '--strict-equality']

autocmd myvimrc FileType typescript,javascript call ExecCheck('eslint')
let g:neomake_javascript_enabled_makers = ['eslint']
if filereadable('.eslintrc.json')
    let g:neomake_javascript_eslint_args = ['--config', '.eslintrc.json']
elseif filereadable($HOME . '/.eslintrc.json')
    let g:neomake_javascript_eslint_args = ['--config', '~/.eslintrc.json']
endif


autocmd myvimrc FileType markdown call ExecCheck('markdownlint')
if filereadable('.markdownlint.json')
    let g:neomake_markdown_markdownlint_args = ['-c', '.markdownlint.json']
elseif filereadable($HOME . '/.markdownlint.json')
    let g:neomake_markdown_markdownlint_args = ['-c', '~/.markdownlint.json']
endif


autocmd myvimrc FileType sh,bash,zsh call ExecCheck('shellcheck')
let g:neomake_sh_shellcheck_args = neomake#makers#ft#sh#shellcheck().args + ['-e', 'SC1090,SC2059,SC2155,SC2164']
let g:neomake_zsh_enabled_makers = ['shellcheck']
let g:neomake_zsh_shellcheck_args = neomake#makers#ft#sh#shellcheck().args + ['--shell', 'bash', '-e', 'SC1090,SC2059,SC2155,SC2164']
