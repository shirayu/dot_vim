
"complete
function! s:meet_neocomplete_requirements()
    return has('lua') && (v:version > 703 || (v:version == 703 && has('patch885')))
endfunction

if s:meet_neocomplete_requirements()
    NeoBundle 'Shougo/neocomplete.vim'
    NeoBundleFetch 'Shougo/neocomplcache.vim'
else
    NeoBundleFetch 'Shougo/neocomplete.vim'
    NeoBundle 'Shougo/neocomplcache.vim'
endif

if s:meet_neocomplete_requirements() "For neocomplete
    let g:neocomplete#enable_at_startup =1
    let g:neocomplete#enable_smart_case =1
    let g:neocomplete#enable_underbar_completion =1
    let g:neocomplete#enable_camel_case_completion =1
    let g:neocomplete#sources#syntax#min_keyword_length =3
    let g:neocomplete#enable_auto_select =1

    "for c and c++
    " cf: http://qiita.com/koara-local/items/815b08ff5c6673d8a5c6
    if !exists('g:neocomplete#force_omni_input_patterns')
        let g:neocomplete#force_omni_input_patterns = {}
    endif
    let g:neocomplete#force_overwrite_completefunc = 1
    let g:neocomplete#force_omni_input_patterns.c = '[^.[:digit:] *\t]\%(\.\|->\)\w*'
    let g:neocomplete#force_omni_input_patterns.cpp = '[^.[:digit:] *\t]\%(\.\|->\)\w*\|\h\w*::\w*'
else
    let g:neocomplcache_enable_at_startup = 1
    let g:neocomplcache_enable_smart_case = 1
    let g:neocomplcache_enable_underbar_completion = 1
    let g:neocomplcache_min_syntax_length = 3
    let g:neocomplcache_enable_auto_select = 1

    let g:neocomplcache_enable_auto_close_preview = 0
endif

set completeopt=menuone
